<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ming.mapper.DepartmentMapper">

    <resultMap id="BaseResultMap" type="com.ming.entity.Department">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="parentid" column="parentId" jdbcType="INTEGER"/>
            <result property="deppath" column="depPath" jdbcType="VARCHAR"/>
            <result property="enabled" column="enabled" jdbcType="TINYINT"/>
            <result property="isparent" column="isParent" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,parentId,
        depPath,enabled,isParent
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from department
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="allDepartment" resultType="com.ming.entity.Department">
        select
        <include refid="Base_Column_List" />
        from department
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from department
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ming.entity.Department" useGeneratedKeys="true">
        insert into department
        ( id,name,parentId
        ,depPath,enabled,isParent
        )
        values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{parentid,jdbcType=INTEGER}
        ,#{deppath,jdbcType=VARCHAR},#{enabled,jdbcType=TINYINT},#{isparent,jdbcType=TINYINT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ming.entity.Department" useGeneratedKeys="true">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="name != null">name,</if>
                <if test="parentid != null">parentId,</if>
                <if test="deppath != null">depPath,</if>
                <if test="enabled != null">enabled,</if>
                <if test="isparent != null">isParent,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="parentid != null">#{parentid,jdbcType=INTEGER},</if>
                <if test="deppath != null">#{deppath,jdbcType=VARCHAR},</if>
                <if test="enabled != null">#{enabled,jdbcType=TINYINT},</if>
                <if test="isparent != null">#{isparent,jdbcType=TINYINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ming.entity.Department">
        update department
        <set>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="parentid != null">
                    parentId = #{parentid,jdbcType=INTEGER},
                </if>
                <if test="deppath != null">
                    depPath = #{deppath,jdbcType=VARCHAR},
                </if>
                <if test="enabled != null">
                    enabled = #{enabled,jdbcType=TINYINT},
                </if>
                <if test="isparent != null">
                    isParent = #{isparent,jdbcType=TINYINT},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ming.entity.Department">
        update department
        set 
            name =  #{name,jdbcType=VARCHAR},
            parentId =  #{parentid,jdbcType=INTEGER},
            depPath =  #{deppath,jdbcType=VARCHAR},
            enabled =  #{enabled,jdbcType=TINYINT},
            isParent =  #{isparent,jdbcType=TINYINT}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
